<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:local="clr-namespace:Util.Controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Util.Controls;component/Style/Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Util.Controls;component/Style/Calendar.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Util.Controls;component/Style/ToggleButton.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Util.Controls;component/Style/Share.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultDatePicker" TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="{StaticResource TextForeground}" />
        <Setter Property="Background" Value="{StaticResource TextBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="local:UtilProperty.FocusBorderBrush" Value="{StaticResource FocusedBorderBrush}" />
        <Setter Property="local:UtilProperty.MouseOverBorderBrush" Value="{StaticResource MouseOverBorderBrush}" />
        <Setter Property="local:UtilProperty.FIconSize" Value="16" />
        <Setter Property="local:UtilProperty.TimeVisibility" Value="Visible" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Width" Value="180" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="SelectedDate" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="CalendarStyle" Value="{StaticResource DefaultCalendar}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid x:Name="PART_Root">
                        <Border SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="{TemplateBinding local:UtilProperty.CornerRadius}" Panel.ZIndex="2"/>
                        <Border x:Name="Bg" Background="{TemplateBinding Background}" />
                        <Grid x:Name="PART_InnerGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <!--Label区域-->
                            <ContentControl x:Name="Label" Template="{TemplateBinding local:UtilProperty.LabelTemplate}" IsTabStop="False" IsHitTestVisible="False"
                                            Content="{TemplateBinding local:UtilProperty.Label}" />
                            <!--附加内容区域-->
                            <Border x:Name="PART_AttachContent" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" >
                                <ContentControl VerticalAlignment="Center" VerticalContentAlignment="Center" Template="{TemplateBinding local:UtilProperty.AttachContent}"/>
                            </Border>
                            <!--下拉按钮-->
                            <ToggleButton x:Name="PART_DropDownToggle" IsTabStop="False" Style="{StaticResource FIconToggleButton}" local:UtilProperty.FIcon="&#xe660;"
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2,1,3,1"
                                         Grid.Column="3"  local:UtilProperty.FIconSize="{TemplateBinding local:UtilProperty.FIconSize}"
                                          Background="{TemplateBinding local:UtilProperty.FocusBackground}"/>
                            <!--水印-->
                            <Border Grid.Column="1">
                                <TextBlock x:Name="Message"  Padding="0" Visibility="Collapsed" Text="{TemplateBinding local:UtilProperty.Watermark}" 
                                       Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="{StaticResource WatermarkOpacity}" HorizontalAlignment="Left" TextAlignment="Center" 
                                       VerticalAlignment="Center" Margin="5,2,5,2" />
                            </Border>
                            <!--Date内容区-->
                            <Grid Grid.Column="1">
                                <TextBox x:Name="PART_TextBox" Style="{StaticResource EditableTextBoxStyle}" HorizontalAlignment="Stretch" 
                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsHitTestVisible="True" IsReadOnly="True"
                                     FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}"
                                     Text="{Binding Path=SelectedDate,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent},StringFormat={StaticResource DateFormat}}"/>
                            </Grid>
                            <!--弹出日历-->
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=PART_Root}" StaysOpen="False" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--1.显示水印-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(local:UtilProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter  Property="BorderBrush" Value="{Binding Path=(local:UtilProperty.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter  Property="BorderBrush" Value="{Binding Path=(local:UtilProperty.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="{StaticResource DisableOpacity}" />
                        </Trigger>
                        <!--  显示时间 -->
                        <Trigger Property="local:UtilProperty.TimeVisibility" Value="Collapsed">
                            <Setter TargetName="PART_TextBox" Property="Text" Value="{Binding Path=SelectedDate,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent},StringFormat={StaticResource DateFormat}}" />
                        </Trigger>
                        <Trigger Property="local:UtilProperty.TimeVisibility" Value="Visible">
                            <Setter TargetName="PART_TextBox" Property="Text" Value="{Binding Path=SelectedDate,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent},StringFormat={StaticResource DateTimeFormat}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DatePicker包含清除Text按钮的样式 ClearButtonDatePicker -->
    <Style TargetType="{x:Type DatePicker}" x:Key="ClearButtonDatePicker" BasedOn="{StaticResource DefaultDatePicker}">
        <Setter Property="local:UtilProperty.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Button Style="{StaticResource DefaultClearButtonStyle}" 
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DatePicker}}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DatePicker包含附加属性Label的样式 LabelDatePicker -->
    <Style TargetType="{x:Type DatePicker}" x:Key="LabelDatePicker" BasedOn="{StaticResource DefaultDatePicker}">
        <Setter Property="Width" Value="220"/>
        <Setter Property="local:UtilProperty.LabelTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl" >
                    <Border  Background="{StaticResource TextLabelBackground}" Width="{Binding Path=(local:UtilProperty.LabelWidth),RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DatePicker}}}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Right" Margin="2 0 4 0" Text="{TemplateBinding Content}" IsHitTestVisible="False"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DatePicker包含附加属性Label，以及ClearText按钮的样式 LabelClearButtonDatePicker -->
    <Style TargetType="{x:Type DatePicker}" x:Key="LabelClearButtonDatePicker" BasedOn="{StaticResource DefaultDatePicker}">
        <Setter Property="Width" Value="220"/>
        <Setter Property="local:UtilProperty.LabelTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl" >
                    <Border  Background="{StaticResource TextLabelBackground}" Width="{Binding Path=(local:UtilProperty.LabelWidth),RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DatePicker}}}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Right" Margin="2 0 4 0" Text="{TemplateBinding Content}" IsHitTestVisible="False"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="local:UtilProperty.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <Button Style="{StaticResource DefaultClearButtonStyle}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DatePicker}}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    

</ResourceDictionary>