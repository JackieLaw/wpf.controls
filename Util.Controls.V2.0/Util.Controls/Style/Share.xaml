<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:local="clr-namespace:Util.Controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Util.Controls;component/Style/Button.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!--下拉按钮样式：ToggleButton样式  ['tɑɡl] 开关，触发器；拴扣；[船] 套索钉-->
    <!--图标大小：local:UtilProperty.FIconSize-->
    <!--图标边距：local:UtilProperty.FIconMargin-->
    <!--图标：local:UtilProperty.FIcon-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="ComboToggleButton">
        <Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
        <Setter Property="local:UtilProperty.FIconSize" Value="14"/>
        <Setter Property="local:UtilProperty.FIcon" Value="&#xe641;"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="local:UtilProperty.FIconMargin" Value="1 1 3 1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Background="{TemplateBinding Background}" x:Name="Bg" Grid.ColumnSpan="2" Margin="0,1,1,1"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  Opacity="0.3"/>
                        <TextBlock Grid.Column="1" x:Name="FIcon" FontSize="{Binding Path=(local:UtilProperty.FIconSize),RelativeSource={RelativeSource TemplatedParent}}"
                                   Text="{TemplateBinding local:UtilProperty.FIcon}" Margin="{TemplateBinding local:UtilProperty.FIconMargin}"
                                   local:UtilProperty.AllowsAnimation="{TemplateBinding IsChecked}"
                                   Foreground="{TemplateBinding Foreground}" Style="{StaticResource FIcon}"/>
                    </Grid>
                    <!--z触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource MouseOverForeground}" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.55" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PressedForeground}" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PressedForeground}" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" TargetName="Grid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--编辑状态文本框样式：无背景、边框，选择输入控件模板中使用-->
    <Style TargetType="{x:Type TextBox}" x:Key="EditableTextBoxStyle">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="MaxLength" Value="2048"/>
        <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxContextMenu}" />
        <Setter Property="SelectionBrush" Value="{StaticResource TextSelectionBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="CaretBrush" Value="{StaticResource TextForeground}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Opacity" Value="{StaticResource ReadonlyOpacity}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisableOpacity}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="DefaultClearButtonStyle" BasedOn="{StaticResource TransparencyButtonStyle}">
        <Setter Property="local:UtilProperty.FIcon" Value="&#xe634;"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="local:UtilProperty.FIconMargin" Value="0"/>
        <Setter Property="local:UtilProperty.AllowsAnimation" Value="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"/>
        <Setter Property="local:UtilProperty.IsClearTextButtonBehaviorEnabled" Value="True"/>
        <Setter Property="Command" Value="local:UtilProperty.ClearTextCommand"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="local:UtilProperty.FIconSize" Value="15"/>
    </Style>
    <ControlTemplate TargetType="ContentControl" x:Key="DefaultTextLabelControlTemplate" >
        <Border  Background="{StaticResource TextLabelBackground}">
            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Right" Margin="2" Text="{TemplateBinding Content}" IsHitTestVisible="False"/>
        </Border>
    </ControlTemplate>
</ResourceDictionary>