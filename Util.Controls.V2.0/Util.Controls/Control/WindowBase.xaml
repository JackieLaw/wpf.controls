<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:local="clr-namespace:Util.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Util.Controls;component/Style/Button.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="MinButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TransparencyButtonStyle}">
        <Setter Property="Width" Value="26"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="1,2,1,2"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=CaptionForeground}"/>
        <Setter Property="Visibility" Value="{Binding Path=MinboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static local:XConverter.BooleanToVisibilityConverter}}"/>
        <Setter Property="local:UtilProperty.FIcon" Value="&#xe627;"/>
        <Setter Property="local:UtilProperty.FIconSize" Value="14"/>
        <Setter Property="local:UtilProperty.FIconMargin" Value="0"/>
        <Setter Property="Command" Value="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
    </Style>
    <Style x:Key="MaxButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TransparencyButtonStyle}">
        <Setter Property="Width" Value="26"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="1,2,1,2"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=CaptionForeground}"/>
        <Setter Property="Visibility" Value="{Binding Path=MaxboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static local:XConverter.BooleanToVisibilityConverter}}"/>
        <Setter Property="local:UtilProperty.FIcon" Value="&#xe663;"/>
        <Setter Property="local:UtilProperty.FIconSize" Value="14"/>
        <Setter Property="local:UtilProperty.FIconMargin" Value="0"/>
        <Setter Property="Command" Value="{Binding Path=MaximizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
    </Style>
    <Style x:Key="CloseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TransparencyButtonStyle}">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=CaptionForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="local:UtilProperty.FIconAnimationEnable" Value="true"/>
        <Setter Property="local:UtilProperty.MouseOverBackground" Value="Red"/>
        <Setter Property="local:UtilProperty.PressedBackground" Value="#AA0D0D"/>
        <Setter Property="local:UtilProperty.MouseOverForeground" Value="White"/>
        <Setter Property="local:UtilProperty.PressedForeground" Value="White"/>
        <Setter Property="local:UtilProperty.FIcon" Value="&#xe634;"/>
        <Setter Property="local:UtilProperty.FIconSize" Value="16"/>
        <Setter Property="local:UtilProperty.FIconMargin" Value="1"/>
        <Setter Property="Command" Value="{Binding Path=CloseWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
    </Style>

    <!--WindowBase基本样式，可以自定义头部-->
    <!--在头部添加交互控件时，必须设置附加属性：shell:WindowChrome.IsHitTestVisibleInChrome="True"-->
    <!--VerticalAlignment 控制头部功能按钮的垂直对齐方式-->
    <Style x:Key="DefaultWindowStyle" TargetType="{x:Type local:WindowBase}">
        <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}"/>
        <Setter Property="Width" Value="480"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="False"/>
        <Setter Property="Height" Value="320"/>
        <Setter Property="BorderBrush" Value="{StaticResource WindowBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FIconSize" Value="18"/>
        <Setter Property="CaptionHeight" Value="28"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="Icon" Value="{DynamicResource Logo}"/>
        <!--标题栏背景色-->
        <Setter Property="CaptionBackground" Value="{StaticResource CaptionBackground}" />
        <Setter Property="CaptionForeground" Value="{StaticResource CaptionForeground}" />
        <Setter Property="FIcon" Value="&#xe65d;"/>
        <Setter Property="MaxboxEnable" Value="True"/>
        <Setter Property="MinboxEnable" Value="True"/>
        <!--建议内边框=3：ResizeBorderThickness = new Thickness(3);-->
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Effect" Value="{x:Null}"/>
        <Setter Property="local:UtilProperty.CornerRadius" Value="0"/>
        <!--窗体基本设置 shell:WindowChrome-->
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome  CaptionHeight="{Binding Path=CaptionHeight,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}" 
                                     ResizeBorderThickness="6" />
            </Setter.Value>
        </Setter>
        <Setter Property="Header">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel x:Name="PART_Header" Margin="8,1,1,1" Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock Style="{StaticResource FIcon}" 
                                   Foreground="{Binding Path=CaptionForeground,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}" 
                                   FontSize="{Binding Path=FIconSize,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}" 
                                   Text="{Binding Path=FIcon,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}" />
                        <TextBlock VerticalAlignment="Center" FontSize="{StaticResource HeaderFontSize}" Margin="5 0 0 0"
                                   Foreground="{Binding Path=CaptionForeground,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}" 
                                   Text="{Binding Path=Title,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WindowBase}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <!--背景，边框-->
                        <Border x:Name="Bg" CornerRadius="{TemplateBinding local:UtilProperty.CornerRadius}" 
                            Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />

                        <Border x:Name="Bg_Border" CornerRadius="{TemplateBinding local:UtilProperty.CornerRadius}" Effect="{TemplateBinding Effect}"
                            BorderBrush="{TemplateBinding BorderBrush}" Panel.ZIndex="3"
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />

                        <!--第二层背景（主要用于设置主题图片时的背景色设置） 暂时不支持，WPF中使用大图片做背景性能不好-->
                        <!--<Border  x:Name="BgInner" CornerRadius="{TemplateBinding local:UtilProperty.CornerRadius}" 
                            Background="{StaticResource WindowInnerBackground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />-->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition  Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="PART_Header" Margin="0" Grid.Row="0" Background="{TemplateBinding CaptionBackground}" Height="{TemplateBinding CaptionHeight}" >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentControl Template="{TemplateBinding Header}"/>
                                    <!--窗体功能按钮：最小、最大、关闭-->
                                    <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalAlignment}" Margin="1"  WindowChrome.IsHitTestVisibleInChrome="True">
                                        <Button x:Name="btnMin"  Style="{StaticResource MinButton}"/>
                                        <Button x:Name="btnMax"  Style="{StaticResource MaxButton}"/>
                                        <Button x:Name="btnClose"  Style="{StaticResource CloseButton}"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <!--内容区域-->
                            <AdornerDecorator Grid.Row="1">
                                <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" />
                            </AdornerDecorator>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="local:UtilProperty.FIcon" TargetName="btnMax" Value="&#xe663;"></Setter>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter Property="local:UtilProperty.FIcon" TargetName="btnMax" Value="&#xe640;"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
